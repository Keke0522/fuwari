import { defineStore } from 'pinia';
// 定时器要在外层作用域定义 方便清除
let aTimer = null;
let bTimer = null;
// let aDataIndex = 0
export const useDeviceDetectionStore = defineStore("deviceDetection", {
    state: () => {
        return {
            aChart: {
                xAxis: [],
                series: []
            },
            bChart: {
                xAxis: [],
                series: []
            }
        }
    },
    actions: {
        getData() {
            // 一个请求命令返回多个图标数据
            let testData= [["2000-06-05",116],["2000-06-06",129],["2000-06-07",135],["2000-06-08",86],["2000-06-09",73],["2000-06-10",85],["2000-06-11",73],["2000-06-12",68],["2000-06-13",92],["2000-06-14",130],["2000-06-15",245],["2000-06-16",139],["2000-06-17",115],["2000-06-18",111],["2000-06-19",309],["2000-06-20",206],["2000-06-21",137],["2000-06-22",128],["2000-06-23",85],["2000-06-24",94],["2000-06-25",71],["2000-06-26",106],["2000-06-27",84],["2000-06-28",93],["2000-06-29",85],["2000-06-30",73],["2000-07-01",83],["2000-07-02",125],["2000-07-03",107],["2000-07-04",82],["2000-07-05",44],["2000-07-06",72],["2000-07-07",106],["2000-07-08",107],["2000-07-09",66],["2000-07-10",91],["2000-07-11",92],["2000-07-12",113],["2000-07-13",107],["2000-07-14",131],["2000-07-15",111],["2000-07-16",64],["2000-07-17",69],["2000-07-18",88],["2000-07-19",77],["2000-07-20",83],["2000-07-21",111],["2000-07-22",57],["2000-07-23",55],["2000-07-24",60],["2000-07-25",44],["2000-07-26",127],["2000-07-27",114],["2000-07-28",86],["2000-07-29",73],["2000-07-30",52],["2000-07-31",69],["2000-08-01",86],["2000-08-02",118],["2000-08-03",56],["2000-08-04",91],["2000-08-05",121],["2000-08-06",127],["2000-08-07",78],["2000-08-08",79],["2000-08-09",46],["2000-08-10",108],["2000-08-11",80],["2000-08-12",79],["2000-08-13",69],["2000-08-14",80],["2000-08-15",105],["2000-08-16",119],["2000-08-17",105],["2000-08-18",55],["2000-08-19",74],["2000-08-20",41],["2000-08-21",62],["2000-08-22",104],["2000-08-23",118],["2000-08-24",121],["2000-08-25",126],["2000-08-26",99],["2000-08-27",92],["2000-08-28",75],["2000-08-29",91],["2000-08-30",94],["2000-08-31",69],["2000-09-01",93],["2000-09-02",124],["2000-09-03",120],["2000-09-04",93],["2000-09-05",26],["2000-09-06",32],["2000-09-07",70],["2000-09-08",89],["2000-09-10",117],["2000-09-11",144],["2000-09-12",111],["2000-09-13",120],["2000-09-14",97],["2000-09-15",108]];
            let aDataIndex = 0
            if(!aTimer) {
                aTimer = setInterval(()=>{
                    if(aDataIndex > 50) {
                        clearInterval(aTimer)
                        return
                    }
                    aDataIndex++
                    this.aChart.xAxis.push(testData[aDataIndex][0])
                    this.aChart.series.push(testData[aDataIndex][1])
                    // console.log("-------", this.aChart.xAxis)
                },300)
            }
            

            let bDataIndex = 0
            let bData = [testData[bDataIndex]]
            bTimer = setInterval(()=> {
                bDataIndex++
                if(bDataIndex > 50) {
                    clearInterval(bTimer)
                }
                bData.push(testData[bDataIndex])
                let xAxis = bData.map(item =>item[0])
                let series = bData.map(item =>item[1])
                // console.log( bDataIndex, bData[bDataIndex][0]);
                this.bChart.xAxis = xAxis
                this.bChart.series = series
                
            },200)
        }
    }
})

